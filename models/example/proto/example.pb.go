// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/example.proto

package example

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExampleEnumModel int32

const (
	ExampleEnumModel_ENUM0 ExampleEnumModel = 0
	ExampleEnumModel_ENUM1 ExampleEnumModel = 1
	ExampleEnumModel_ENUM2 ExampleEnumModel = 2
)

var ExampleEnumModel_name = map[int32]string{
	0: "ENUM0",
	1: "ENUM1",
	2: "ENUM2",
}

var ExampleEnumModel_value = map[string]int32{
	"ENUM0": 0,
	"ENUM1": 1,
	"ENUM2": 2,
}

func (x ExampleEnumModel) String() string {
	return proto.EnumName(ExampleEnumModel_name, int32(x))
}

func (ExampleEnumModel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_45cce4fba0c1b108, []int{0}
}

type ExampleNestedModel struct {
	StringKey            string   `protobuf:"bytes,1,opt,name=string_key,json=stringKey,proto3" json:"string_key,omitempty"`
	Int32Key             int32    `protobuf:"varint,2,opt,name=int32_key,json=int32Key,proto3" json:"int32_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExampleNestedModel) Reset()         { *m = ExampleNestedModel{} }
func (m *ExampleNestedModel) String() string { return proto.CompactTextString(m) }
func (*ExampleNestedModel) ProtoMessage()    {}
func (*ExampleNestedModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_45cce4fba0c1b108, []int{0}
}

func (m *ExampleNestedModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleNestedModel.Unmarshal(m, b)
}
func (m *ExampleNestedModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleNestedModel.Marshal(b, m, deterministic)
}
func (m *ExampleNestedModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleNestedModel.Merge(m, src)
}
func (m *ExampleNestedModel) XXX_Size() int {
	return xxx_messageInfo_ExampleNestedModel.Size(m)
}
func (m *ExampleNestedModel) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleNestedModel.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleNestedModel proto.InternalMessageInfo

func (m *ExampleNestedModel) GetStringKey() string {
	if m != nil {
		return m.StringKey
	}
	return ""
}

func (m *ExampleNestedModel) GetInt32Key() int32 {
	if m != nil {
		return m.Int32Key
	}
	return 0
}

type ExampleDBModelWithKey struct {
	// Special field which is used for constructing a primary key
	//
	// Actual key is composed of the following components:
	//
	// - namespace_id - this is inferred from the client object passed to the
	//  "model_pb_with_key_to_entity_pb" function
	// - project_id - this is inferred from the client object passed to the
	//  "model_pb_with_key_to_entity_pb" function
	// - key - string value which uniquely identifies this object. This value is specified by
	// setting the "key" string field on this object
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	StringKey            string   `protobuf:"bytes,2,opt,name=string_key,json=stringKey,proto3" json:"string_key,omitempty"`
	Int32Key             int32    `protobuf:"varint,3,opt,name=int32_key,json=int32Key,proto3" json:"int32_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExampleDBModelWithKey) Reset()         { *m = ExampleDBModelWithKey{} }
func (m *ExampleDBModelWithKey) String() string { return proto.CompactTextString(m) }
func (*ExampleDBModelWithKey) ProtoMessage()    {}
func (*ExampleDBModelWithKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_45cce4fba0c1b108, []int{1}
}

func (m *ExampleDBModelWithKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleDBModelWithKey.Unmarshal(m, b)
}
func (m *ExampleDBModelWithKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleDBModelWithKey.Marshal(b, m, deterministic)
}
func (m *ExampleDBModelWithKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleDBModelWithKey.Merge(m, src)
}
func (m *ExampleDBModelWithKey) XXX_Size() int {
	return xxx_messageInfo_ExampleDBModelWithKey.Size(m)
}
func (m *ExampleDBModelWithKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleDBModelWithKey.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleDBModelWithKey proto.InternalMessageInfo

func (m *ExampleDBModelWithKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ExampleDBModelWithKey) GetStringKey() string {
	if m != nil {
		return m.StringKey
	}
	return ""
}

func (m *ExampleDBModelWithKey) GetInt32Key() int32 {
	if m != nil {
		return m.Int32Key
	}
	return 0
}

type ExampleDBModel struct {
	// Simple type
	Int32Key  int32   `protobuf:"varint,1,opt,name=int32_key,json=int32Key,proto3" json:"int32_key,omitempty"`
	StringKey string  `protobuf:"bytes,2,opt,name=string_key,json=stringKey,proto3" json:"string_key,omitempty"`
	BoolKey   bool    `protobuf:"varint,3,opt,name=bool_key,json=boolKey,proto3" json:"bool_key,omitempty"`
	BytesKey  []byte  `protobuf:"bytes,4,opt,name=bytes_key,json=bytesKey,proto3" json:"bytes_key,omitempty"`
	DoubleKey float64 `protobuf:"fixed64,14,opt,name=double_key,json=doubleKey,proto3" json:"double_key,omitempty"`
	FloatKey  float32 `protobuf:"fixed32,15,opt,name=float_key,json=floatKey,proto3" json:"float_key,omitempty"`
	Int64Key  int64   `protobuf:"varint,16,opt,name=int64_key,json=int64Key,proto3" json:"int64_key,omitempty"`
	// Container types with simple values
	MapStringString map[string]string `protobuf:"bytes,5,rep,name=map_string_string,json=mapStringString,proto3" json:"map_string_string,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapStringInt32  map[string]int32  `protobuf:"bytes,6,rep,name=map_string_int32,json=mapStringInt32,proto3" json:"map_string_int32,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	StringArrayKey  []string          `protobuf:"bytes,7,rep,name=string_array_key,json=stringArrayKey,proto3" json:"string_array_key,omitempty"`
	Int32ArrayKey   []int32           `protobuf:"varint,8,rep,packed,name=int32_array_key,json=int32ArrayKey,proto3" json:"int32_array_key,omitempty"`
	// Container types with complex values
	ComplexArrayKey []*ExampleNestedModel `protobuf:"bytes,9,rep,name=complex_array_key,json=complexArrayKey,proto3" json:"complex_array_key,omitempty"`
	// Enum types
	EnumKey ExampleEnumModel `protobuf:"varint,10,opt,name=enum_key,json=enumKey,proto3,enum=example.ExampleEnumModel" json:"enum_key,omitempty"`
	// Complex types from protobuf stdlib
	TimestampKey *timestamp.Timestamp `protobuf:"bytes,11,opt,name=timestamp_key,json=timestampKey,proto3" json:"timestamp_key,omitempty"`
	StructKey    *_struct.Struct      `protobuf:"bytes,12,opt,name=struct_key,json=structKey,proto3" json:"struct_key,omitempty"`
	// Other special types
	NullKey              _struct.NullValue `protobuf:"varint,13,opt,name=null_key,json=nullKey,proto3,enum=google.protobuf.NullValue" json:"null_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ExampleDBModel) Reset()         { *m = ExampleDBModel{} }
func (m *ExampleDBModel) String() string { return proto.CompactTextString(m) }
func (*ExampleDBModel) ProtoMessage()    {}
func (*ExampleDBModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_45cce4fba0c1b108, []int{2}
}

func (m *ExampleDBModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleDBModel.Unmarshal(m, b)
}
func (m *ExampleDBModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleDBModel.Marshal(b, m, deterministic)
}
func (m *ExampleDBModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleDBModel.Merge(m, src)
}
func (m *ExampleDBModel) XXX_Size() int {
	return xxx_messageInfo_ExampleDBModel.Size(m)
}
func (m *ExampleDBModel) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleDBModel.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleDBModel proto.InternalMessageInfo

func (m *ExampleDBModel) GetInt32Key() int32 {
	if m != nil {
		return m.Int32Key
	}
	return 0
}

func (m *ExampleDBModel) GetStringKey() string {
	if m != nil {
		return m.StringKey
	}
	return ""
}

func (m *ExampleDBModel) GetBoolKey() bool {
	if m != nil {
		return m.BoolKey
	}
	return false
}

func (m *ExampleDBModel) GetBytesKey() []byte {
	if m != nil {
		return m.BytesKey
	}
	return nil
}

func (m *ExampleDBModel) GetDoubleKey() float64 {
	if m != nil {
		return m.DoubleKey
	}
	return 0
}

func (m *ExampleDBModel) GetFloatKey() float32 {
	if m != nil {
		return m.FloatKey
	}
	return 0
}

func (m *ExampleDBModel) GetInt64Key() int64 {
	if m != nil {
		return m.Int64Key
	}
	return 0
}

func (m *ExampleDBModel) GetMapStringString() map[string]string {
	if m != nil {
		return m.MapStringString
	}
	return nil
}

func (m *ExampleDBModel) GetMapStringInt32() map[string]int32 {
	if m != nil {
		return m.MapStringInt32
	}
	return nil
}

func (m *ExampleDBModel) GetStringArrayKey() []string {
	if m != nil {
		return m.StringArrayKey
	}
	return nil
}

func (m *ExampleDBModel) GetInt32ArrayKey() []int32 {
	if m != nil {
		return m.Int32ArrayKey
	}
	return nil
}

func (m *ExampleDBModel) GetComplexArrayKey() []*ExampleNestedModel {
	if m != nil {
		return m.ComplexArrayKey
	}
	return nil
}

func (m *ExampleDBModel) GetEnumKey() ExampleEnumModel {
	if m != nil {
		return m.EnumKey
	}
	return ExampleEnumModel_ENUM0
}

func (m *ExampleDBModel) GetTimestampKey() *timestamp.Timestamp {
	if m != nil {
		return m.TimestampKey
	}
	return nil
}

func (m *ExampleDBModel) GetStructKey() *_struct.Struct {
	if m != nil {
		return m.StructKey
	}
	return nil
}

func (m *ExampleDBModel) GetNullKey() _struct.NullValue {
	if m != nil {
		return m.NullKey
	}
	return _struct.NullValue_NULL_VALUE
}

func init() {
	proto.RegisterEnum("example.ExampleEnumModel", ExampleEnumModel_name, ExampleEnumModel_value)
	proto.RegisterType((*ExampleNestedModel)(nil), "example.ExampleNestedModel")
	proto.RegisterType((*ExampleDBModelWithKey)(nil), "example.ExampleDBModelWithKey")
	proto.RegisterType((*ExampleDBModel)(nil), "example.ExampleDBModel")
	proto.RegisterMapType((map[string]int32)(nil), "example.ExampleDBModel.MapStringInt32Entry")
	proto.RegisterMapType((map[string]string)(nil), "example.ExampleDBModel.MapStringStringEntry")
}

func init() { proto.RegisterFile("proto/example.proto", fileDescriptor_45cce4fba0c1b108) }

var fileDescriptor_45cce4fba0c1b108 = []byte{
	// 563 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0xfd, 0x36, 0xfe, 0x5c, 0xdb, 0xd3, 0x26, 0x71, 0xdd, 0x22, 0xd2, 0x14, 0x84, 0xd5, 0x0b,
	0xb4, 0x02, 0xe4, 0x40, 0x12, 0x22, 0xc4, 0x0d, 0x6a, 0x45, 0x84, 0x50, 0x94, 0x08, 0x6d, 0x29,
	0x70, 0x57, 0x39, 0xc9, 0x36, 0x44, 0xf8, 0x27, 0x72, 0xd6, 0xa8, 0x7e, 0x11, 0x9e, 0x17, 0xed,
	0xac, 0xf3, 0x63, 0x37, 0x22, 0x37, 0xf6, 0xee, 0x99, 0x73, 0xce, 0xcc, 0xee, 0xce, 0xc0, 0xc9,
	0x22, 0x89, 0x45, 0xdc, 0xe2, 0xf7, 0x7e, 0xb8, 0x08, 0xb8, 0x87, 0x3b, 0xc7, 0xc8, 0xb7, 0xcd,
	0x27, 0xb3, 0x38, 0x9e, 0x05, 0xbc, 0x85, 0xf0, 0x38, 0xbd, 0x6b, 0x2d, 0x45, 0x92, 0x4e, 0x84,
	0xa2, 0x35, 0x9f, 0x95, 0xa3, 0x62, 0x1e, 0xf2, 0xa5, 0xf0, 0xc3, 0x85, 0x22, 0x5c, 0x7c, 0x01,
	0xa7, 0xaf, 0x9c, 0x46, 0x7c, 0x29, 0xf8, 0x74, 0x18, 0x4f, 0x79, 0xe0, 0x3c, 0x05, 0x58, 0x8a,
	0x64, 0x1e, 0xcd, 0x6e, 0x7f, 0xf1, 0xac, 0x41, 0x5c, 0x42, 0x2d, 0x66, 0x29, 0x64, 0xc0, 0x33,
	0xe7, 0x1c, 0xac, 0x79, 0x24, 0x3a, 0x6d, 0x8c, 0x56, 0x5c, 0x42, 0x75, 0x66, 0x22, 0x30, 0xe0,
	0xd9, 0x05, 0x87, 0x47, 0xb9, 0xe3, 0xc7, 0x2b, 0x74, 0xfb, 0x3e, 0x17, 0x3f, 0xa5, 0xca, 0x06,
	0x6d, 0xe3, 0x26, 0x97, 0xa5, 0x34, 0x95, 0x7f, 0xa6, 0xd1, 0x4a, 0x69, 0xfe, 0x18, 0x50, 0x2b,
	0xe6, 0x29, 0xf2, 0x49, 0x91, 0xbf, 0x2f, 0xd7, 0x19, 0x98, 0xe3, 0x38, 0x0e, 0xd6, 0xa9, 0x4c,
	0x66, 0xc8, 0x7d, 0x5e, 0xc6, 0x38, 0x13, 0x7c, 0x89, 0xb1, 0xff, 0x5d, 0x42, 0x8f, 0x98, 0x89,
	0x40, 0x6e, 0x3b, 0x8d, 0xd3, 0x71, 0xc0, 0x31, 0x5a, 0x73, 0x09, 0x25, 0xcc, 0x52, 0x48, 0xae,
	0xbd, 0x0b, 0x62, 0x5f, 0x60, 0xb4, 0xee, 0x12, 0x5a, 0x61, 0x26, 0x02, 0x9b, 0xf3, 0xf5, 0xba,
	0x18, 0xb4, 0x5d, 0x42, 0x35, 0xac, 0xb7, 0xd7, 0x95, 0xc1, 0x1f, 0x70, 0x1c, 0xfa, 0x8b, 0xdb,
	0xbc, 0x66, 0xf5, 0x6b, 0xe8, 0xae, 0x46, 0x0f, 0xdb, 0xaf, 0xbc, 0x55, 0x2f, 0x14, 0x2f, 0xc0,
	0x1b, 0xfa, 0x8b, 0x6b, 0x24, 0xaa, 0x6f, 0x3f, 0x12, 0x49, 0xc6, 0xea, 0x61, 0x11, 0x75, 0x6e,
	0xc0, 0xde, 0x72, 0xc6, 0x0b, 0x6a, 0x1c, 0xa0, 0xf1, 0xcb, 0xbd, 0xc6, 0x9f, 0x25, 0x5b, 0xf9,
	0xd6, 0xc2, 0x02, 0xe8, 0x50, 0xb0, 0x73, 0x4b, 0x3f, 0x49, 0xfc, 0x0c, 0x0f, 0x65, 0xb8, 0x1a,
	0xb5, 0x58, 0x4d, 0xe1, 0x97, 0x12, 0x96, 0x47, 0x7b, 0x0e, 0x75, 0xf5, 0x4e, 0x1b, 0xa2, 0xe9,
	0x6a, 0x54, 0x67, 0x55, 0x84, 0xd7, 0xbc, 0x4f, 0x70, 0x3c, 0x89, 0x65, 0x19, 0xf7, 0x5b, 0x4c,
	0x0b, 0x2b, 0x3d, 0x2f, 0x57, 0xba, 0xd5, 0xbd, 0xac, 0x9e, 0xab, 0xd6, 0x46, 0x5d, 0x30, 0x79,
	0x94, 0x86, 0xa8, 0x07, 0x97, 0xd0, 0x5a, 0xfb, 0xac, 0xac, 0xef, 0x47, 0x69, 0xa8, 0xd4, 0x86,
	0xa4, 0x4a, 0xd5, 0x07, 0xa8, 0xae, 0xa7, 0x05, 0xa5, 0x87, 0x2e, 0xa1, 0x87, 0xed, 0xa6, 0xa7,
	0x66, 0xca, 0x5b, 0xcd, 0x94, 0xf7, 0x75, 0xc5, 0x62, 0x47, 0x6b, 0x81, 0x34, 0xe8, 0x61, 0xcb,
	0xa5, 0x13, 0xf5, 0xfa, 0x47, 0xa8, 0x7e, 0xfc, 0x40, 0x7d, 0x8d, 0x14, 0xec, 0xc5, 0x74, 0x82,
	0x7d, 0xf1, 0x16, 0xcc, 0x28, 0x0d, 0x54, 0x2f, 0x56, 0xb1, 0xdc, 0x87, 0x39, 0x47, 0x69, 0x10,
	0x7c, 0xf3, 0x83, 0x94, 0x33, 0x43, 0x72, 0x07, 0x3c, 0x6b, 0x5e, 0xc1, 0xe9, 0xae, 0x06, 0xd8,
	0x31, 0x77, 0xa7, 0xa0, 0xff, 0x96, 0xda, 0x7c, 0x0c, 0xd4, 0xe6, 0x7d, 0xe5, 0x1d, 0x69, 0x5e,
	0xc2, 0xc9, 0x8e, 0xb7, 0xde, 0x67, 0xa1, 0x6f, 0x59, 0xbc, 0xe8, 0x80, 0x5d, 0xbe, 0x53, 0xc7,
	0x02, 0xbd, 0x3f, 0xba, 0x19, 0xbe, 0xb6, 0xff, 0x5b, 0x2d, 0xdf, 0xd8, 0x64, 0xb5, 0x6c, 0xdb,
	0x95, 0xf1, 0x01, 0x1e, 0xac, 0xf3, 0x37, 0x00, 0x00, 0xff, 0xff, 0x11, 0xf9, 0xad, 0x70, 0xec,
	0x04, 0x00, 0x00,
}
